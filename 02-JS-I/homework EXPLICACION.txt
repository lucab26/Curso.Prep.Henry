1- VARIABLES

	LA VARIABLE EN JAVASCRIPT FUNCIONA COMO UNA CAJA. NOS PERMITE ALMACENAR INFORMACIÓN DENTRO PARA DESPUÉS PODER
UTILIZARLA EN CUALQUIER LUGAR DE NUESTRO TRABAJO.
	LAS VARIABLES SE CREAN UTILIZANDO EL CÓDIGO var. AUNQUE ESTE CÓDIGO NO SEA EL ÚNICO PARA REALIZAR LAS VARIABLES,
SERÁ EL QUE MAS VAMOS A UTILIZAR. PARA CREAR UNA VARIABLE, COLOCAREMOS var SEGUIDO DEL DATO QUE QUEREMOS CARGAR. EJ: 
var perrito = "lindo". PARA VISUALIZAR QUE CARGAMOS DENTRO DE NUESTRA VARIABLE, ES TAN SIMPLE COMO COLOCAR EL NOMBRE (EN 
ESTE CASO perrito) Y VEREMOS LOS DATOS QUE CARGAMOS. OTRO CÓDIGO PARA VER LOS DATOS QUE LE CARGAMOS A UNA VARIABLE ES
console.log. EJEMPLO: console.log (perrito). 
	NO NECESARIAMENTE LAS VARIABLES SE CARGAN DE PALABRAS, SINO TAMBIÉN DE NÚMEROS. POR EJEMPLO: var calor = 36.

2- ¿QUE SON LOS STRINGS?
	LOS STRINGS SON CADENAS DE CARACTERES, DE LETRAS Y NÚMEROS. LOS STRINGS SIEMPRE EMPIEZAN Y TERMINAN CON
COMILLAS ( "  " ). ES IMPORTANTE DISTINGUIR QUE TODO LO QUE COLOCAMOS ENTRE COMILLAS (POR EJEMPLO: "25") SE TOMARÍA
COMO UNA PALABRA, PORQUE ESTÁ ENTRE COMILLAS; NO COMO 25 QUE SERÍA EL NÚMERO REAL. NO PODEMO JUNTAR CARACTERES CON NÚMEROS NORMALES.
	TODO LO QUE ESTÉ ENTRE COMILLAS, SE JUNTA CON LAS COMILLAS. Y TODO LO QUE NO TENGA COMILLAS, SE JUNTA CON LOS
QUE NO TENGAN COMILLAS. SI QUERÉS REALIZAR UNA SUMA ENTRE LOS STRINGS "25" Y "20", TE VA A DAR DE RESULTADO "2520" PORQUE
LOS ESTÁ JUNTANDO COMO SI FUESEN PALABRAS. AHORA SI QUERES SUMAR UNA VARIABLE 25 Y OTRA VARIABLE 20, TE VA A DAR DE
RESULTADO 45, YA QUE SON NUMEROS NATURALES.

3- ¿QUE SON LAS FUNCIONES?
	LA FUNCIÓN TIENE EL TRABAJO DE AGRUPAR LÍNEAS DE CÓDIGO, PARA ALMACENARLO Y DESPUÉS UTILIZARLO TODO JUNTO CUANDO
SEA NECESARIO. UNA FUNCIÓN ESTA COMPUESTA DE ESTA FORMA: 
									nombre que 
								      le demos a la 
									 función
                  							    v

				"function" es el código ---> function  nombreFuncion  (Argumento)  {<--- Llaves que encierran
													 el código de la función
									                                    !
						}  <--------------------------------------------------------!

	¿Y QUE ES UN ARGUMENTO? BIEN, LOS ARGUMENTOS SON VARIABLES QUE LE DAMOS UN NOMBRE Y QUE LUEGO AL SER INVOCADAS
DENTRO DE LA FUNCION, ADQUIEREN UN VALOR. POR EJEMPLO
						
						function SUMA (a, b) {
						console.log (a + b)
						}

	ACÁ, NUESTRO ARGUMENTO SERÍAN 2 NUMEROS. PUEDE SER 1, 2, 3, EL QUE QUERRAMOS SUMAR.
		
						   Vamos a sumar 1 + 3

					Escribiremos SUMA (1, 3) para que nuestra función
						  detecte que tiene que hacer
					     y con que argumentos puede trabajar				
						______________________________
					        l         SUMA (1, 3)        l
						l____________________________l

						Esto es lo que piensa la computadora
						  cuando le pedimos que sume 1 y 3:
                                               
  						      function SUMA (1, 3) {
						      console.log (1 + 3)
						  } 
				
						Luego de que calcule y si escribimos
						todo bien, nos mostrará el resultado
						______________________________
					        l              4             l
						l____________________________l

	TENEMOS OTROS CÓDIGOS PARA SIMPLIFICAR, POR EJEMPLO return, QUE ADEMÁS TIENE MAS FUNCIONES QUE console.log. VEAMOS, SI QUEREMOS
REALIZAR UNA MULTIPLICACIÓN POR EJEMPLO, UNA FORMA MAS RESUMIDA DE PODER HACERLA SERÍA ESTA:

						function MULTIPLICACION (1, 7) {
						return (1 * 7)
						}
								7
	
	¿PERO QUE TIENE DE DIFERENTE SI HACE LO MISMO? LO QUE HACE DIFERENTE A return ES QUE ESTE CÓDIGO PUEDE CORTAR TODO LO QUE SIGUE
DENTRO DE NUESTRA FUNCIÓN! POR EJEMPLO, SI TENEMOS UNA FUNCION QUE NOS VA A HABLAR O VA A REALIZAR VARIAS TAREAS, SOLO SE VA A DESARROLLAR
HASTA DONDE SE ENCUENTRE EL RETURN. MIRÁ:
						function MULTIPLICACIÓN (1, 7) {
						console.log ("estamos calculando")
						return (1 * 7)
						console.log ("resultado!")
						}

	ACÁ LA COMPUTADORA NOS VA A DECIR " estamos calculando", NOS DARÁ EL RESULTADO DE LA MULTIPLICACIÓN Y NADA MAS! PORQUE EL CÓDIGO
return VUELVE A ESPERAR QUE LE DEMOS NUMEROS PARA QUE CALCULE, IGNORANDO AL CÓDIGO console.log !



3- DECLARACIONES (if)

	¿Y SI QUEREMOS QUE UN COMANDO SE EJECUTE SI SE PRESENTAN CIERTAS CONDICIONES? PERFECTO. LOS COMANDOS QUE SE EJECUTEN DEPENDIENDO LAS
CONDICIONES DE LAS VARIABLES SE LLAMAN: "DECLARACIONES CONDICIONALES". EL CÓDIGO if ES UNO DE ELLOS! if FUNCIONA ASÍ:
					
								
						if (numeroCualquiera < 50) {
						return (true)
		                                } 
						else {
						return (false)
						}

	AQUÍ NOS REFERIMOS A QUE SI: EL NUMERO QUE COLOQUEMOS SEA MENOR QUE 50, EL CÓDIGO NOS VA A DECIR QUE ES VERDAD Y QUE ESTÁ TODO BIEN.
AHORA, SI COLOCAMOS UN NUMERO QUE SEA MAYOR QUE 50, NOS VA A MARCAR QUE ES FALSO, POR LO TANTO NOS DIRÁ QUE ESTÁ MAL. 
	LOS VALORES DE true O false SE DENOMINAN: "VALORES BOOLEANOS". ESTOS VALORES SON UNICAMENTE 2 Y SON 100% EXACTOS. ES CORRECTO O INCORRECTO.
NO TENEMOS PUNTO MEDIO. LOS VALORES BOOLEANOS, NOS ABREN LAS PUERTAS A MUCHAS POSIBILIDADES, POR EJEMPLO QUE LA MAQUINA NOS PREGUNTE COSAS
Y ASI PODREMOS RESPONDER, CORREGIR NUESTA TAREA DE MATEMÁTICA MUCHO MAS RÁPIDO, ENTRE OTRAS COSAS.